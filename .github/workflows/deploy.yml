name: Build and Deploy Strapi App

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Cache node modules
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
      - run: npm install

      - name: Create .env file
        run: |
          touch .env
          echo HOST = ${{ vars.HOST }} >> .env
          echo PORT = ${{ vars.PORT }} >> .env
          echo URL = ${{ vars.URL }} >> .env
          echo APP_KEYS = ${{ secrets.APP_KEYS }} >> .env
          echo API_TOKEN_SALT = ${{ secrets.API_TOKEN_SALT }} >> .env
          echo TRANSFER_TOKEN_SALT = ${{ secrets.TRANSFER_TOKEN_SALT }} >> .env
          echo DATABASE_CLIENT = ${{ secrets.DATABASE_CLIENT }} >> .env
          echo DATABASE_SSL = ${{ secrets.DATABASE_SSL }} >> .env
          echo DATABASE_FILENAME = ${{ secrets.DATABASE_FILENAME }} >> .env
          echo JWT_SECRET = ${{ secrets.JWT_SECRET }} >> .env

      - name: Build Strapi
        run: npm run build --omit=dev

      - name: Transfer to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          source: dist/*
          target: ${{ vars.HOME_ENV }}/cms
          overwrite: true

      - name: Restart Strapi
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          script: |
            export NVM_DIR=${{ vars.HOME_ENV }}/.nvm
            source ${{ vars.HOME_ENV }}/.nvm/nvm.sh
            pm2 restart api
